/// <reference types="node" />
import { z } from "zod";
export declare type BufferOrStringWithName = {
    data: Buffer | string;
    name?: string;
};
export declare type FileOrBuffer = File | Buffer | BufferOrStringWithName;
declare type JsonLiteral = boolean | null | number | string;
declare type JsonLiteralOrFileOrBuffer = JsonLiteral | FileOrBuffer;
export declare type Json = JsonLiteralOrFileOrBuffer | JsonObject | Json[];
export declare type JsonObject = {
    [key: string]: Json;
};
export declare const isBrowser: () => boolean;
export declare const FileBufferOrStringSchema: z.ZodUnion<[z.ZodTypeAny, z.ZodString]>;
export declare type FileBufferOrString = z.output<typeof FileBufferOrStringSchema>;
export declare type StorageOptions = {
    appendGatewayUrl: boolean;
};
export {};
//# sourceMappingURL=index.d.ts.map